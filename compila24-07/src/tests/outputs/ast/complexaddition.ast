(PROGRAM (NAME ComplexAddition)
	(STRUCT (NAME Complex)
		(PARAM_DECL (NAME  )Real : float)
		(PARAM_DECL (NAME  )Imag : float)))
	(PROCEDURE_DECL (NAME  Swap )
	(PARAM_DECL (REF_TYPE
	(NAME  ))a : null)
	(PARAM_DECL (REF_TYPE
	(NAME  ))b : null)
	(VAR_DECL  (NAME tmp : 
	(NAME  ))
 )
	(ASSIGN (NAME tmp) := (NAME a) )
	(ASSIGN (NAME a) := (NAME b) )
	(ASSIGN (NAME b) := (NAME tmp) ))
	(PROCEDURE_DECL (NAME  Add : Complex )
	(PARAM_DECL (NAME  )a : Complex)
	(PARAM_DECL (NAME  )b : Complex)
	(VAR_DECL  (NAME retval : 
	(NAME  ))
 )
	(ASSIGN (NAME retval) := new(NAME  )Complex )
	(ASSIGN (NAME retval).Real)) := (NAME a).Real))+(NAME b).Real)) )
	(ASSIGN (NAME retval).Imag)) := (NAME a).Imag))+(NAME b).Imag)) )
	(RETURN_STMT  (NAME retval)))
	(PROCEDURE_DECL (NAME  Max : int )
	(PARAM_DECL (NAME  )a : int)
	(PARAM_DECL (NAME  )b : int)
	(IF (NAME a)>(NAME b)	 (RETURN_STMT  (NAME a)))) 
	 )
	(RETURN_STMT  (NAME b)))
	(PROCEDURE_DECL (NAME  main )
	(PROCEDURE_DECL (NAME  Square : float )
	(PARAM_DECL (NAME  )val : float)
	(RETURN_STMT  (NAME val)^(FLOAT_LITERAL 2.0)))
	(VAR_DECL  (NAME num : 
	(NAME  ))
 )
	(ASSIGN (NAME num) := (FLOAT_LITERAL 6.48074) )
	(CALL_STMT print_float	(NAME num))
	(CALL_STMT print_str	(STRING  squared is ))
	(CALL_STMT print_float	(CALL_STMT Square	(NAME num)))
	(RETURN_STMT  ))
)